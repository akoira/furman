/*
 * To change this template, choose Tools | Templates
 * and open the template in the draw.
 */

/*
 * OrderInfoPanelTab.java
 *
 * Created on Feb 26, 2009, 2:42:14 PM
 */
package by.dak.cutting.swing.store.tabs;

import by.dak.cutting.DialogShowers;
import by.dak.cutting.swing.BaseTabPanel;
import by.dak.cutting.swing.ItemSelector;
import by.dak.cutting.swing.ValueSave;
import by.dak.cutting.swing.component.MaskTextField;
import by.dak.cutting.swing.component.OrderNumberField;
import by.dak.cutting.swing.order.LastOrderNumberInfoPanel;
import by.dak.cutting.swing.store.helpers.AEntityNEDActions;
import by.dak.cutting.swing.store.modules.MCustomerPanel;
import by.dak.cutting.swing.store.modules.MDesignerPanel;
import by.dak.persistence.FacadeContext;
import by.dak.persistence.entities.Customer;
import by.dak.persistence.entities.DesignerEntity;
import com.toedter.calendar.JDateChooser;
import org.jdesktop.application.Action;

import javax.swing.*;
import javax.swing.text.JTextComponent;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.beans.Beans;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 * @author ebabich
 */
public class OrderInfoTab extends BaseTabPanel
{

    private final String regExp = "\\d*[,]{0,1}\\d{0,2}";
    private final boolean newCustomerDisable = false;

    /**
     * Creates new form CustomerTab
     */
    public OrderInfoTab()
    {
        initComponents();
        changeEditable();
        readyValue.setDateFormatString("dd.MM.yyyy");
        costValue.setMask(regExp);
        if (!Beans.isDesignTime())
        {
            addPropertyChangeListener("editable", new PropertyChangeListener()
            {
                @Override
                public void propertyChange(PropertyChangeEvent evt)
                {
                    changeEditable();
                }
            });
        }
    }

    private void changeEditable()
    {
        costValue.setEditable(isEditable());
        customerValue.setEditable(isEditable());
        dateValue.setEditable(isEditable());
        designerValue.setEditable(isEditable());
        nameValue.setEditable(isEditable());
        numberValue.setEditable(isEditable());
        readyValue.setEnabled(isEditable());
        cbOrderMiscalculation.setEnabled(isEditable());
    }

    public JCheckBox getOrderMiscalculation()
    {
        return cbOrderMiscalculation;
    }

    private void addSelectAllListener(final JTextComponent component)
    {
        FocusAdapter adapter = new FocusAdapter()
        {
            @Override
            public void focusGained(FocusEvent e)
            {
                component.selectAll();
            }
        };
        component.addFocusListener(adapter);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        name = new javax.swing.JLabel();
        lastOrderNumberInfoPanel = new by.dak.cutting.swing.order.LastOrderNumberInfoPanel();
        number = new javax.swing.JLabel();
        customer = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        ready = new javax.swing.JLabel();
        cost = new javax.swing.JLabel();
        designer = new javax.swing.JLabel();
        numberValue = new by.dak.cutting.swing.component.OrderNumberField();
        nameValue = new javax.swing.JTextField();
        addSelectAllListener(nameValue);
        customerValue = new by.dak.cutting.swing.ItemSelector();
        designerValue = new by.dak.cutting.swing.ItemSelector();
        readyValue = new com.toedter.calendar.JDateChooser();
        dateValue = new javax.swing.JTextField();
        addSelectAllListener(dateValue);
        costValue = new by.dak.cutting.swing.component.MaskTextField();
        addSelectAllListener(costValue);
        setName("Form"); // NOI18N

        name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(OrderInfoTab.class);
        name.setText(resourceMap.getString("name.text")); // NOI18N
        name.setName("name"); // NOI18N

        lastOrderNumberInfoPanel.setName("lastOrderNumberInfoPanel"); // NOI18N

        number.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        number.setText(resourceMap.getString("number.text")); // NOI18N
        number.setName("number"); // NOI18N

        customer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        customer.setText(resourceMap.getString("customer.text")); // NOI18N
        customer.setName("customer"); // NOI18N

        date.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        date.setText(resourceMap.getString("date.text")); // NOI18N
        date.setName("date"); // NOI18N

        ready.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ready.setText(resourceMap.getString("ready.text")); // NOI18N
        ready.setName("ready"); // NOI18N

        cost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cost.setText(resourceMap.getString("cost.text")); // NOI18N
        cost.setName("cost"); // NOI18N

        designer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        designer.setText(resourceMap.getString("designer.text")); // NOI18N
        designer.setName("designer"); // NOI18N

        numberValue.setName("numberValue"); // NOI18N

        nameValue.setText(resourceMap.getString("nameValue.text")); // NOI18N
        nameValue.setName("nameValue"); // NOI18N

        customerValue.setName("customerValue"); // NOI18N
        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(OrderInfoTab.class, this);
        customerValue.setNewAction(actionMap.get("showNewCustomerDialog")); // NOI18N

        designerValue.setName("designerValue"); // NOI18N
        designerValue.setNewAction(actionMap.get("showNewDesignerDialog")); // NOI18N

        readyValue.setName("readyValue"); // NOI18N

        dateValue.setEditable(false);
        dateValue.setText(resourceMap.getString("dateValue.text")); // NOI18N
        dateValue.setName("dateValue"); // NOI18N

        costValue.setText(resourceMap.getString("costValue.text")); // NOI18N
        costValue.setName("costValue"); // NOI18N

        cbOrderMiscalculation = new JCheckBox(resourceMap.getString("cbOrderMiscalculation.text"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                                                        .addComponent(number)))
                                                        .addComponent(customer))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(customerValue, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                                        .addComponent(nameValue, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                                        .addComponent(numberValue, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addComponent(date)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dateValue, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(designer)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(designerValue, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(15, 15, 15)
                                                                .addComponent(cost))
                                                        .addComponent(ready, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(readyValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                                                        .addComponent(costValue, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(lastOrderNumberInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(cbOrderMiscalculation, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(numberValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(nameValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(number, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(customerValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(customer, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dateValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(readyValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ready, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(costValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(designerValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(designer, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lastOrderNumberInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbOrderMiscalculation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(11, Short.MAX_VALUE))
        );
    }// </draw-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cost;
    private by.dak.cutting.swing.component.MaskTextField costValue;
    private javax.swing.JLabel customer;
    private by.dak.cutting.swing.ItemSelector customerValue;
    private javax.swing.JLabel date;
    private javax.swing.JTextField dateValue;
    private javax.swing.JLabel designer;
    private by.dak.cutting.swing.ItemSelector designerValue;
    private by.dak.cutting.swing.order.LastOrderNumberInfoPanel lastOrderNumberInfoPanel;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameValue;
    private javax.swing.JLabel number;
    private by.dak.cutting.swing.component.OrderNumberField numberValue;
    private javax.swing.JLabel ready;
    private com.toedter.calendar.JDateChooser readyValue;
    // End of variables declaration//GEN-END:variables

    private JCheckBox cbOrderMiscalculation;

    @Action
    public void showNewDesignerDialog()
    {
        MDesignerPanel designerPanel = new MDesignerPanel();
        designerPanel.setValue(new DesignerEntity());
        ValueSave<DesignerEntity> designerSaver = new ValueSave<DesignerEntity>()
        {
            @Override
            public void save(DesignerEntity value)
            {
                FacadeContext.getDesignerFacade().save(value);
                designerValue.addItem(value);
                firePropertyChange(AEntityNEDActions.PROPERTY_updateGui, null, value);
            }
        };
        designerPanel.setValueSave(designerSaver);
        DialogShowers.showBy(designerPanel, this, true);
    }

    @Action
    public void showNewCustomerDialog()
    {
//        MCustomerPanel customerPanel = new MCustomerPanel();
//        customerPanel.setValue(new Customer());
//        ValueSave<Customer> customerSaver = new ValueSave<Customer>()
//        {
//            @Override
//            public void save(Customer value)
//            {
//                FacadeContext.getCustomerFacade().save(value);
//                customerValue.addItem(value);
//                firePropertyChange(AEntityNEDActions.PROPERTY_updateGui, null, value);
//            }
//        };
//        customerPanel.setValueSave(customerSaver);
//        DialogShowers.showBy(customerPanel, this, true);
    }

    public OrderNumberField getNumberValue()
    {
        return numberValue;
    }

    public JTextField getNameValue()
    {
        return nameValue;
    }

    public ItemSelector getCustomerValue()
    {
        return customerValue;
    }

    public JTextField getDateValue()
    {
        return dateValue;
    }

    public JDateChooser getReadyValue()
    {
        return readyValue;
    }

    public MaskTextField getCostValue()
    {
        return costValue;
    }

    public ItemSelector getDesignerValue()
    {
        return designerValue;
    }

    public LastOrderNumberInfoPanel getLastOrderNumberInfoPanel()
    {
        return lastOrderNumberInfoPanel;
    }

    public boolean isNewCustomerDisable() {
        return newCustomerDisable;
    }
}
