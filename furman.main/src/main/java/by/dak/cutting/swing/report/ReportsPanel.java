/*
 * To change this template, choose Tools | Templates
 * and open the template in the draw.
 */

/*
 * ReportsPanel.java
 *
 * Created on 16.03.2009, 16:09:48
 */
package by.dak.cutting.swing.report;

import by.dak.cutting.DialogShowers;
import by.dak.cutting.swing.DPanel;
import by.dak.cutting.swing.renderer.EntityListRenderer;
import by.dak.persistence.FacadeContext;
import by.dak.persistence.MainFacade;
import by.dak.persistence.entities.AOrder;
import by.dak.report.model.Report;
import by.dak.report.model.ReportsModel;
import by.dak.report.model.impl.ReportModelCreator;
import by.dak.report.model.impl.ReportsModelImpl;
import com.jidesoft.swing.JideButton;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.swing.JRViewer;
import org.jdesktop.application.Application;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author admin
 */
public class ReportsPanel extends DPanel
{
    private final MainFacade mainFacade;
    /**
     * Creates new form ReportsPanel
     */
    public ReportsPanel()
    {
        initComponents();
        init();
        mainFacade = FacadeContext.getMainFacade();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <draw-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        labelReport = new javax.swing.JLabel();
        comboBoxReport = new javax.swing.JComboBox();
//        buttonPrint = new javax.swing.JButton();
        panelViewer = new javax.swing.JPanel();

        setName("ReportTab"); // NOI18N

        labelReport.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelReport.setText(getResourceMap().getString("label.report.text"));
        labelReport.setName("labelReport"); // NOI18N

        comboBoxReport.setModel(new javax.swing.DefaultComboBoxModel(new String[]
                {
                        "Item 1", "Item 2", "Item 3", "Item 4"
                }));
        comboBoxReport.setName("comboBoxReport"); // NOI18N

        buttonAutocad = new JideButton();
        buttonAutocad.setAction(actionMap.get("autocad"));
        buttonAutocad.setName("buttonPrint"); // NOI18N
        buttonAutocad.setFocusable(false);

        buttonRecreate = new JideButton();
        buttonRecreate.setAction(actionMap.get("recreate"));
        buttonRecreate.setName("buttonRecreate"); // NOI18N
        buttonRecreate.setFocusable(false);

        panelViewer.setName("panelViewer"); // NOI18N
        panelViewer.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup()
                        .addComponent(labelReport, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRecreate).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAutocad).addContainerGap(113, Short.MAX_VALUE)
                )
                        .addComponent(panelViewer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(
                        javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelReport)
                        .addComponent(comboBoxReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonRecreate, 0, 28, 32)
                        .addComponent(buttonAutocad, 0, 28, 32)
                ).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(
                        panelViewer, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)));
    }// </draw-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAutocad;

    private javax.swing.JComboBox comboBoxReport;

    private javax.swing.JLabel labelReport;

    private javax.swing.JPanel panelViewer;
    // End of variables declaration//GEN-END:variables

    private ReportsModel reportsModel;

    private JasperPrint jasperPrint;

    private JRViewer viewer;

    private JButton buttonRecreate;

    private ActionMap actionMap = Application.getInstance().getContext().getActionMap(ReportsPanel.class,
            this);

    private JasperPrint getJasperPrint()
    {
        return jasperPrint;
    }

    private void setJasperPrint(JasperPrint jasperPrint)
    {
        this.jasperPrint = jasperPrint;
        if (viewer != null)
        {
            panelViewer.remove(viewer);
        }
        viewer = new JRViewer(getJasperPrint(), Locale.getDefault());
        panelViewer.add(viewer, BorderLayout.CENTER);
        validate();
        Runnable runnable = new Runnable()
        {

            @Override
            public void run()
            {
                viewer.setFitPageZoomRatio();
            }
        };
        SwingUtilities.invokeLater(runnable);
    }

    public ReportsModel getReportsModel()
    {
        return reportsModel;
    }

    public void setReportsModel(ReportsModel reportsModel)
    {
        this.reportsModel = reportsModel;

        List<Report> list = getReportsModel().getReports();

        DefaultComboBoxModel comboBoxModel = new DefaultComboBoxModel(new Vector<Report>(list));
        comboBoxReport.setModel(comboBoxModel);

        if (list.size() > 0)
        {
            setJasperPrint(list.get(0).getJasperPrint());
        }

    }

    @org.jdesktop.application.Action
    public void autocad()
    {
        FacadeContext.getAutocadFacade().exportAutocadFiles(reportsModel.getOrder(), new File("D:\\tmp"), getResourceMap().getString("label.select.text"));
    }


    @org.jdesktop.application.Action
    public void recreate()
    {
        if (reportsModel != null)
        {
            FacadeContext.getReportJCRFacade().removeAll(reportsModel.getOrder());
            AOrder order = FacadeContext.getOrderFacade().findBy(reportsModel.getOrder().getId());
            ((ReportsModelImpl)reportsModel).setOrder(order);
            if(reportsModel.getCuttingModel() != null)
                reportsModel.getCuttingModel().replace(order);
            create();
        }
    }

    @org.jdesktop.application.Action
    public void create()
    {
        final ReportsModelImpl[] reportsModelImpl = new ReportsModelImpl[1];
        SwingWorker swingWorker = new SwingWorker()
        {
            @Override
            protected Object doInBackground() throws Exception
            {
                try
                {
                    ReportModelCreator reportModelCreator = new ReportModelCreator(reportsModel.getOrder(), reportsModel.getCuttingModel(), mainFacade);
                    reportsModelImpl[0] = reportModelCreator.create();
                    setReportsModel(reportsModelImpl[0]);
                    return null;
                }
                catch (Exception e)
                {
                    Logger.getLogger(ReportsPanel.class.getName()).log(Level.SEVERE, null, e);
                    throw e;
                }
            }
        };
        DialogShowers.showWaitDialog(swingWorker, this);
    }

    private void init()
    {

        setBorder(BorderFactory.createEtchedBorder());
        comboBoxReport.setRenderer(new EntityListRenderer());


        comboBoxReport.addItemListener(new ItemListener()
        {

            @Override
            public void itemStateChanged(ItemEvent e)
            {
                Report report = (Report) e.getItem();
                if (report.getJasperPrint() != getJasperPrint())
                {
                    setJasperPrint(report.getJasperPrint());
                }
            }
        });
    }

}
